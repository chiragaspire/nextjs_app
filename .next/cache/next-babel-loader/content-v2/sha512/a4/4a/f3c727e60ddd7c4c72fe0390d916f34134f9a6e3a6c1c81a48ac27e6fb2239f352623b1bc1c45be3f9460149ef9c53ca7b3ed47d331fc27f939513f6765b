{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetups.id,\n      image: props.meetups.image,\n      title: props.meetups.title,\n      address: props.meetups.address,\n      description: props.meetups.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n\n  if (client) {\n    console.log(\"connected!!!\");\n  }\n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetups: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg/640px-Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg',\n        id: meetupId,\n        title: 'A first meetup',\n        address: 'Jamnagar',\n        description: 'A first meetup description.'\n      }\n    },\n    revalidate: 10\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetups","id","image","title","address","description","getStaticPaths","client","connect","console","log","db","meetupsCollection","collection","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,EAAE,EAAEA,KAAK,CAACC,OAAN,CAAcC,EADtB;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFzB;AAGI,MAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAcG,KAHzB;AAII,MAAA,OAAO,EAAEJ,KAAK,CAACC,OAAN,CAAcI,OAJ3B;AAKI,MAAA,WAAW,EAAEL,KAAK,CAACC,OAAN,CAAcK;AAL/B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CAbD;;AAeA,OAAO,MAAMC,cAAc,GAAG,YAAW;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,kHADiB,CAArB;;AAEA,MAAID,MAAJ,EAAY;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACC;;AACH,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMb,OAAO,GAAG,MAAMY,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AACAT,EAAAA,MAAM,CAACU,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAACnB,OAAO,CAACoB,GAAR,CAAYC,MAAM,KAAG;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AAAR,KAAH,CAAlB;AAFH,GAAP;AAKH,CAjBM;AAmBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACDC,MAAAA,OAAO,EAAE;AAELE,QAAAA,KAAK,EAAC,6KAFD;AAGLD,QAAAA,EAAE,EAACsB,QAHE;AAILpB,QAAAA,KAAK,EAAC,gBAJD;AAKLC,QAAAA,OAAO,EAAC,UALH;AAMLC,QAAAA,WAAW,EAAC;AANP;AADR,KADF;AAWLsB,IAAAA,UAAU,EAAC;AAXN,GAAP;AAaD,CAfI;AAiBP,eAAe7B,aAAf","sourcesContent":["import { MongoClient,ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nconst MeetupDetails = (props) => {\n    return (\n        <>\n            <MeetupDetail\n                id={props.meetups.id}\n                image={props.meetups.image}\n                title={props.meetups.title}\n                address={props.meetups.address}\n                description={props.meetups.description}\n            />\n        </>\n        \n    )\n}\n\nexport const getStaticPaths = async() => {\n    const client = await MongoClient.connect(\n        'mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n    if (client) {\n      console.log(\"connected!!!\");\n      }\n    const db = client.db();\n    \n    const meetupsCollection = db.collection('meetups');\n            \n    const meetups = await meetupsCollection.find({},{_id:1}).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths:meetups.map(meetup=>({params:{meetupId:meetup._id.toString()}})),\n        \n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const meetupId = context.params.meetupId;\n    return {\n      props: {\n            meetups: {\n                \n                image:'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg/640px-Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg',\n                id:meetupId,\n                title:'A first meetup',\n                address:'Jamnagar',\n                description:'A first meetup description.'\n        }\n      },\n      revalidate:10\n    }\n  }\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}