{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetups.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetups.id,\n      image: props.meetups.image,\n      title: props.meetups.title,\n      address: props.meetups.address,\n      description: props.meetups.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetups","title","meetupData","description","id","image","address"],"mappings":";;;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,OAAN,CAAcC;AAAtB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACG,UAAN,CAAiBC;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI,QAAC,YAAD;AACI,MAAA,EAAE,EAAEJ,KAAK,CAACC,OAAN,CAAcI,EADtB;AAEI,MAAA,KAAK,EAAEL,KAAK,CAACC,OAAN,CAAcK,KAFzB;AAGI,MAAA,KAAK,EAAEN,KAAK,CAACC,OAAN,CAAcC,KAHzB;AAII,MAAA,OAAO,EAAEF,KAAK,CAACC,OAAN,CAAcM,OAJ3B;AAKI,MAAA,WAAW,EAAEP,KAAK,CAACC,OAAN,CAAcG;AAL/B;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA,kBADJ;AAgBH,CAjBD;;KAAML,a;;AAkEN,eAAeA,aAAf","sourcesContent":["import { MongoClient,ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nconst MeetupDetails = (props) => {\n    return (\n        <>\n            <Head>\n                <title>{props.meetups.title}</title>\n                <meta name='description' content={props.meetupData.description} />\n            </Head>\n            <MeetupDetail\n                id={props.meetups.id}\n                image={props.meetups.image}\n                title={props.meetups.title}\n                address={props.meetups.address}\n                description={props.meetups.description}\n            />\n        </>\n        \n    )\n}\n\nexport const getStaticPaths = async() => {\n    const client = await MongoClient.connect(\n        'mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n    if (client) {\n      console.log(\"connected!!!\");\n      }\n    const db = client.db();\n    \n    const meetupsCollection = db.collection('meetups');\n            \n    const meetups = await meetupsCollection.find({},{_id:1}).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths:meetups.map(meetup=>({params:{meetupId:meetup._id.toString()}})),\n        \n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect(\n        'mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'\n      );\n      const db = client.db();\n    \n      const meetupsCollection = db.collection('meetups');\n    \n      const selectedMeetup = await meetupsCollection.findOne({\n        _id: ObjectId(meetupId),\n      });\n    \n      client.close();\n    return {\n        props: {\n            meetups: {\n                \n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n            }\n        }\n    };\n  }\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}