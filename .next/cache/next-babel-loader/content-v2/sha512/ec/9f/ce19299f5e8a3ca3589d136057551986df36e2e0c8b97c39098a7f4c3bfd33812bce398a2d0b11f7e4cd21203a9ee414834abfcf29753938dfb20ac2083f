{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport { ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetups.id,\n      image: props.meetups.image,\n      title: props.meetups.title,\n      address: props.meetups.address,\n      description: props.meetups.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/[meetupId]/index.js"],"names":["ObjectId","MeetupDetail","MeetupDetails","props","meetups","id","image","title","address","description"],"mappings":";;;;;;AAAA,SAAqBA,QAArB,QAAqC,SAArC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,EAAE,EAAEA,KAAK,CAACC,OAAN,CAAcC,EADtB;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFzB;AAGI,MAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAcG,KAHzB;AAII,MAAA,OAAO,EAAEJ,KAAK,CAACC,OAAN,CAAcI,OAJ3B;AAKI,MAAA,WAAW,EAAEL,KAAK,CAACC,OAAN,CAAcK;AAL/B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CAbD;;KAAMP,a;;AAmDN,eAAeA,aAAf","sourcesContent":["import { MongoClient,ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nconst MeetupDetails = (props) => {\n    return (\n        <>\n            <MeetupDetail\n                id={props.meetups.id}\n                image={props.meetups.image}\n                title={props.meetups.title}\n                address={props.meetups.address}\n                description={props.meetups.description}\n            />\n        </>\n        \n    )\n}\n\nexport const getStaticPaths = async() => {\n    const client = await MongoClient.connect(\n        'mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n    if (client) {\n      console.log(\"connected!!!\");\n      }\n    const db = client.db();\n    \n    const meetupsCollection = db.collection('meetups');\n            \n    const meetups = await meetupsCollection.find({},{_id:1}).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths:meetups.map(meetup=>({params:{meetupId:meetup._id}})),\n        \n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const meetupId = context.params.meetupId;\n    return {\n      props: {\n            meetups: {\n                \n                image:'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg/640px-Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg',\n                id:meetupId,\n                title:'A first meetup',\n                address:'Jamnagar',\n                description:'A first meetup description.'\n        }\n      },\n      revalidate:10\n    }\n  }\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}