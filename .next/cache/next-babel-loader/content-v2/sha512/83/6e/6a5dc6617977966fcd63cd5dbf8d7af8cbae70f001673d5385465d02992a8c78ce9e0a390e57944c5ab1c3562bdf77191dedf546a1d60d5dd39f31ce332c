{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/index.js\";\nimport Layout from '../components/layout/Layout';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_CONTENT = [{\n  id: 'm1',\n  title: 'A first meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/Portofino_-_2016-06-02_-_Harbor.jpg/640px-Portofino_-_2016-06-02_-_Harbor.jpg',\n  address: 'Some address 5, some city',\n  description: 'This is a first meetup'\n}, {\n  id: 'm2',\n  title: 'A second meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg/640px-Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg',\n  address: 'Some address 10, some city',\n  description: 'This is a second meetup'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect('mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n\n  if (client) {\n    console.log(\"connected!!!\");\n  }\n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}; // export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups:DUMMY_CONTENT\n//     }\n//   }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/home/aspire09/Desktop/CHIRAG/React js/chirag/12_NEXT_JS_PROJECT/nextjs_app/pages/index.js"],"names":["Layout","MeetupList","MongoClient","DUMMY_CONTENT","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","console","log","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,yIAHT;AAIEC,EAAAA,OAAO,EAAE,2BAJX;AAKEC,EAAAA,WAAW,EAAC;AALd,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,6KAHT;AAIEC,EAAAA,OAAO,EAAE,4BAJX;AAKEC,EAAAA,WAAW,EAAC;AALd,CARoB,CAAtB;;AAkBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,sBAEI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMD,CARD;;AAUA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kHADmB,CAArB;;AAEF,MAAID,MAAJ,EAAY;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACC;;AACH,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEER,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCnB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KADkB;AAEhCC,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFkB;AAGhCC,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAHgB;AAIhCH,QAAAA,EAAE,EAACoB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ6B,OAAb,CAAZ;AADJ,KADF;AAULC,IAAAA,UAAU,EAAC;AAVN,GAAP;AAYD,CAzBM,C,CA2BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAelB,QAAf","sourcesContent":["import Layout from '../components/layout/Layout'\nimport MeetupList from '../components/meetups/MeetupList';\nimport {MongoClient} from 'mongodb';\nconst DUMMY_CONTENT = [\n  {\n    id: 'm1',\n    title: 'A first meetup',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/Portofino_-_2016-06-02_-_Harbor.jpg/640px-Portofino_-_2016-06-02_-_Harbor.jpg',\n    address: 'Some address 5, some city',\n    description:'This is a first meetup'\n  },\n  {\n    id: 'm2',\n    title: 'A second meetup',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg/640px-Courtyard_of_the_Doge%27s_Palace_%28Venice%29_002.jpg',\n    address: 'Some address 10, some city',\n    description:'This is a second meetup'\n  },\n\n]\n\nconst HomePage = (props) => {\n  \n  return (\n    \n      <MeetupList meetups={props.meetups} />\n    \n    \n  )\n}\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect(\n    'mongodb+srv://chirag_aspire:chirag.aspire@cluster0.zoh4q.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\nif (client) {\n  console.log(\"connected!!!\");\n  }\nconst db = client.db();\n\nconst meetupsCollection = db.collection('meetups');\n        \nconst meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id:meetup._id.toString()\n          \n      }))\n    },\n    revalidate:10\n  }\n}\n\n// export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups:DUMMY_CONTENT\n//     }\n//   }\n// }\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}